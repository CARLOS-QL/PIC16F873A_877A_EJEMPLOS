

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 21:04:05 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F873A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231                           
   232                           	psect	idataBANK0
   233  06C2                     __pidataBANK0:
   234                           
   235                           ;initializer for _datos
   236  06C2  3450               	retlw	80
   237  06C3  3449               	retlw	73
   238  06C4  3443               	retlw	67
   239  06C5  3431               	retlw	49
   240  06C6  3436               	retlw	54
   241  06C7  3446               	retlw	70
   242  06C8  3438               	retlw	56
   243  06C9  3437               	retlw	55
   244  06CA  3433               	retlw	51
   245  06CB  3441               	retlw	65
   246  06CC  3400               	retlw	0
   247  0006                     _PORTBbits	set	6
   248  0007                     _PORTCbits	set	7
   249  0005                     _PORTAbits	set	5
   250  0013                     _SSPBUF	set	19
   251  000C                     _PIR1bits	set	12
   252  0014                     _SSPCON	set	20
   253  0085                     _TRISAbits	set	133
   254  0086                     _TRISBbits	set	134
   255  009F                     _ADCON1	set	159
   256  0091                     _SSPCON2bits	set	145
   257  0093                     _SSPADD	set	147
   258  0091                     _SSPCON2	set	145
   259  0094                     _SSPSTAT	set	148
   260  0087                     _TRISCbits	set	135
   261  048E                     _ACKSTAT	set	1166
   262                           
   263                           	psect	cinit
   264  07EA                     start_initialization:	
   265                           ; #config settings
   266                           
   267  07EA                     __initialization:
   268                           
   269                           ; Initialize objects allocated to BANK0
   270  07EA  1383               	bcf	3,7	;select IRP bank0
   271  07EB  302B               	movlw	low (__pdataBANK0+11)
   272  07EC  00FD               	movwf	btemp+-1
   273  07ED  3006               	movlw	high __pidataBANK0
   274  07EE  00FE               	movwf	btemp
   275  07EF  30C2               	movlw	low __pidataBANK0
   276  07F0  00FF               	movwf	btemp+1
   277  07F1  3020               	movlw	low __pdataBANK0
   278  07F2  0084               	movwf	4
   279  07F3  118A  26E1         	fcall	init_ram0
   280                           
   281                           ; Clear objects allocated to BANK0
   282  07F5  01B6               	clrf	__pbssBANK0& (0+127)
   283  07F6  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   284  07F7  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   285  07F8  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   286  07F9  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   287  07FA  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   288  07FB  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   289  07FC  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   290  07FD                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293  07FD                     __end_of__initialization:
   294  07FD  0183               	clrf	3
   295  07FE  118A  2F74         	ljmp	_main	;jump to C main() function
   296                           
   297                           	psect	bssBANK0
   298  0036                     __pbssBANK0:
   299  0036                     LCD_integer@F955:
   300  0036                     	ds	8
   301                           
   302                           	psect	dataBANK0
   303  0020                     __pdataBANK0:
   304  0020                     _datos:
   305  0020                     	ds	11
   306                           
   307                           	psect	inittext
   308  06DD                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  06DD  087E               	movf	126,w
   312  06DE  008A               	movwf	10
   313  06DF  087F               	movf	127,w
   314  06E0  0082               	movwf	2
   315  06E1                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  06E1  26DD  118A         	fcall	init_fetch0
   323  06E3  0080               	movwf	0
   324  06E4  0A84               	incf	4,f
   325  06E5  0804               	movf	4,w
   326  06E6  067D               	xorwf	125,w
   327  06E7  1903               	btfsc	3,2
   328  06E8  3400               	retlw	0
   329  06E9  0AFF               	incf	127,f
   330  06EA  1903               	btfsc	3,2
   331  06EB  0AFE               	incf	126,f
   332  06EC  2EE1               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0000                     __pcstackCOMMON:
   336  0000                     ??_LCD_dato:
   337  0000                     ??_LCD_cmd:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0000                     ??_I2C_init:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0000                     ??_I2C_start:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0000                     ??_I2C_restart:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0000                     ??_I2C_stop:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0000                     ??_I2C_read:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0000                     ??_I2C_ack:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0000                     ??_I2C_nack:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0000                     ??_I2C_write:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           	psect	cstackBANK0
   366  002B                     __pcstackBANK0:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  002B                     ?_LCD_init:
   370  002B                     ?_LCD_dato:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  002B                     ?_LCD_cmd:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  002B                     ?_I2C_init:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  002B                     ?_I2C_start:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  002B                     ?_I2C_restart:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  002B                     ?_I2C_stop:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  002B                     ?_I2C_read:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  002B                     ?_I2C_ack:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  002B                     ?_I2C_nack:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  002B                     ?_I2C_write:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  002B                     ?_main:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  002B                     ?_LCD_write:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  002B                     ??_LCD_write:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  002B                     I2C_write@I2C_data:	
   410                           ; 1 bytes @ 0x0
   411                           
   412                           
   413                           ; 1 bytes @ 0x0
   414  002B                     	ds	2
   415  002D                     LCD_write@dato:
   416                           
   417                           ; 1 bytes @ 0x2
   418  002D                     	ds	1
   419  002E                     LCD_cmd@dato:
   420  002E                     LCD_dato@dato:	
   421                           ; 1 bytes @ 0x3
   422                           
   423                           
   424                           ; 1 bytes @ 0x3
   425  002E                     	ds	1
   426  002F                     ??_LCD_init:
   427                           
   428                           ; 1 bytes @ 0x4
   429  002F                     	ds	3
   430  0032                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x7
   433  0032                     	ds	2
   434  0034                     main@i:
   435                           
   436                           ; 1 bytes @ 0x9
   437  0034                     	ds	1
   438  0035                     main@i_149:
   439                           
   440                           ; 1 bytes @ 0xA
   441  0035                     	ds	1
   442                           
   443                           	psect	maintext
   444  0774                     __pmaintext:	
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 27 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  i               1   10[BANK0 ] unsigned char 
   455 ;;  i               1    9[BANK0 ] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : B00/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1
   465 ;;      Params:         0       0       0
   466 ;;      Locals:         0       2       0
   467 ;;      Temps:          0       2       0
   468 ;;      Totals:         0       4       0
   469 ;;Total ram usage:        4 bytes
   470 ;; Hardware stack levels required when called: 3
   471 ;; This function calls:
   472 ;;		_I2C_ack
   473 ;;		_I2C_init
   474 ;;		_I2C_nack
   475 ;;		_I2C_read
   476 ;;		_I2C_restart
   477 ;;		_I2C_start
   478 ;;		_I2C_stop
   479 ;;		_I2C_write
   480 ;;		_LCD_dato
   481 ;;		_LCD_init
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487  0774                     _main:	
   488                           ;psect for function _main
   489                           
   490                           
   491                           ;main.c: 29: ADCON1 = 0X06;
   492                           
   493                           ;incstack = 0
   494                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   495  0774  3006               	movlw	6
   496  0775  1683               	bsf	3,5	;RP0=1, select bank1
   497  0776  1303               	bcf	3,6	;RP1=0, select bank1
   498  0777  009F               	movwf	31	;volatile
   499                           
   500                           ;main.c: 30: LCD_init();
   501  0778  118A  26ED  118A   	fcall	_LCD_init
   502                           
   503                           ;main.c: 31: I2C_init();
   504  077B  118A  26CD  118A   	fcall	_I2C_init
   505                           
   506                           ;main.c: 34: I2C_start();
   507  077E  118A  267C  118A   	fcall	_I2C_start
   508                           
   509                           ;main.c: 35: I2C_write(0b10100000);
   510  0781  30A0               	movlw	160
   511  0782  118A  2698  118A   	fcall	_I2C_write
   512                           
   513                           ;main.c: 36: I2C_write(0);
   514  0785  3000               	movlw	0
   515  0786  118A  2698  118A   	fcall	_I2C_write
   516                           
   517                           ;main.c: 37: I2C_write(0);
   518  0789  3000               	movlw	0
   519  078A  118A  2698  118A   	fcall	_I2C_write
   520                           
   521                           ;main.c: 39: for(char i=0; i<8; i++){
   522  078D  1283               	bcf	3,5	;RP0=0, select bank0
   523  078E  1303               	bcf	3,6	;RP1=0, select bank0
   524  078F  01B4               	clrf	main@i
   525  0790                     l1028:
   526                           
   527                           ;main.c: 40: I2C_write(datos[i]);
   528  0790  0834               	movf	main@i,w
   529  0791  3E20               	addlw	(low (_datos| 0))& (0+255)
   530  0792  0084               	movwf	4
   531  0793  1383               	bcf	3,7	;select IRP bank0
   532  0794  0800               	movf	0,w
   533  0795  118A  2698  118A   	fcall	_I2C_write
   534  0798  3001               	movlw	1
   535  0799  1283               	bcf	3,5	;RP0=0, select bank0
   536  079A  1303               	bcf	3,6	;RP1=0, select bank0
   537  079B  00B2               	movwf	??_main
   538  079C  0832               	movf	??_main,w
   539  079D  07B4               	addwf	main@i,f
   540  079E  3008               	movlw	8
   541  079F  0234               	subwf	main@i,w
   542  07A0  1C03               	skipc
   543  07A1  2F90               	goto	l1028
   544                           
   545                           ;main.c: 41: };main.c: 44: I2C_stop();
   546  07A2  118A  2682  118A   	fcall	_I2C_stop
   547                           
   548                           ;main.c: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
   549  07A5  301A               	movlw	26
   550  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   551  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   552  07A8  00B3               	movwf	??_main+1
   553  07A9  30F8               	movlw	248
   554  07AA  00B2               	movwf	??_main
   555  07AB                     u517:
   556  07AB  0BB2               	decfsz	??_main,f
   557  07AC  2FAB               	goto	u517
   558  07AD  0BB3               	decfsz	??_main+1,f
   559  07AE  2FAB               	goto	u517
   560                           
   561                           ;main.c: 48: I2C_start();
   562  07AF  118A  267C  118A   	fcall	_I2C_start
   563                           
   564                           ;main.c: 49: I2C_write(0b10100000);
   565  07B2  30A0               	movlw	160
   566  07B3  118A  2698  118A   	fcall	_I2C_write
   567                           
   568                           ;main.c: 50: I2C_write(0);
   569  07B6  3000               	movlw	0
   570  07B7  118A  2698  118A   	fcall	_I2C_write
   571                           
   572                           ;main.c: 51: I2C_write(0);
   573  07BA  3000               	movlw	0
   574  07BB  118A  2698  118A   	fcall	_I2C_write
   575                           
   576                           ;main.c: 53: I2C_restart();
   577  07BE  118A  2676  118A   	fcall	_I2C_restart
   578                           
   579                           ;main.c: 54: I2C_write(0b10100001);
   580  07C1  30A1               	movlw	161
   581  07C2  118A  2698  118A   	fcall	_I2C_write
   582                           
   583                           ;main.c: 56: for(char i=1; i<=8; i++){
   584  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   585  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   586  07C7  01B5               	clrf	main@i_149
   587  07C8  0AB5               	incf	main@i_149,f
   588  07C9                     l1052:
   589                           
   590                           ;main.c: 58: LCD_dato(I2C_read());
   591  07C9  118A  26B7  118A   	fcall	_I2C_read
   592  07CC  118A  2688  118A   	fcall	_LCD_dato
   593                           
   594                           ;main.c: 59: if(i==8)
   595  07CF  3008               	movlw	8
   596  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   597  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   598  07D2  0635               	xorwf	main@i_149,w
   599  07D3  1D03               	btfss	3,2
   600  07D4  2FD9               	goto	l1058
   601                           
   602                           ;main.c: 60: I2C_nack();
   603  07D5  118A  26AC  118A   	fcall	_I2C_nack
   604  07D8  2FDC               	goto	l1060
   605  07D9                     l1058:
   606                           
   607                           ;main.c: 62: else;main.c: 63: I2C_ack();
   608  07D9  118A  26A1  118A   	fcall	_I2C_ack
   609  07DC                     l1060:
   610  07DC  3001               	movlw	1
   611  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   612  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   613  07DF  00B2               	movwf	??_main
   614  07E0  0832               	movf	??_main,w
   615  07E1  07B5               	addwf	main@i_149,f
   616  07E2  3009               	movlw	9
   617  07E3  0235               	subwf	main@i_149,w
   618  07E4  1C03               	skipc
   619  07E5  2FC9               	goto	l1052
   620                           
   621                           ;main.c: 64: };main.c: 65: I2C_stop();
   622  07E6  118A  2682  118A   	fcall	_I2C_stop
   623  07E9                     l86:	
   624                           ;main.c: 68: while(1){
   625                           
   626  07E9  2FE9               	goto	l86
   627  07EA                     __end_of_main:
   628                           
   629                           	psect	text1
   630  06ED                     __ptext1:	
   631 ;; *************** function _LCD_init *****************
   632 ;; Defined at:
   633 ;;		line 18 in file "LCD.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1
   647 ;;      Params:         0       0       0
   648 ;;      Locals:         0       0       0
   649 ;;      Temps:          0       3       0
   650 ;;      Totals:         0       3       0
   651 ;;Total ram usage:        3 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 2
   654 ;; This function calls:
   655 ;;		_LCD_cmd
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661  06ED                     _LCD_init:	
   662                           ;psect for function _LCD_init
   663                           
   664                           
   665                           ;LCD.c: 20: TRISCbits.TRISC0 = 0;
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   669  06ED  1683               	bsf	3,5	;RP0=1, select bank1
   670  06EE  1303               	bcf	3,6	;RP1=0, select bank1
   671  06EF  1007               	bcf	7,0	;volatile
   672                           
   673                           ;LCD.c: 21: TRISCbits.TRISC1 = 0;
   674  06F0  1087               	bcf	7,1	;volatile
   675                           
   676                           ;LCD.c: 22: TRISCbits.TRISC2 = 0;
   677  06F1  1107               	bcf	7,2	;volatile
   678                           
   679                           ;LCD.c: 23: TRISBbits.TRISB3 = 0;
   680  06F2  1186               	bcf	6,3	;volatile
   681                           
   682                           ;LCD.c: 25: TRISAbits.TRISA2 = 0;
   683  06F3  1105               	bcf	5,2	;volatile
   684                           
   685                           ;LCD.c: 26: TRISAbits.TRISA3 = 0;
   686  06F4  1185               	bcf	5,3	;volatile
   687                           
   688                           ;LCD.c: 27: PORTAbits.RA2 = 0;
   689  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   690  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   691  06F7  1105               	bcf	5,2	;volatile
   692                           
   693                           ;LCD.c: 28: PORTAbits.RA3 = 0;
   694  06F8  1185               	bcf	5,3	;volatile
   695                           
   696                           ;LCD.c: 30: PORTCbits.RC0 = 0;
   697  06F9  1007               	bcf	7,0	;volatile
   698                           
   699                           ;LCD.c: 31: PORTCbits.RC1 = 0;
   700  06FA  1087               	bcf	7,1	;volatile
   701                           
   702                           ;LCD.c: 32: PORTCbits.RC2 = 0;
   703  06FB  1107               	bcf	7,2	;volatile
   704                           
   705                           ;LCD.c: 33: PORTBbits.RB3 = 0;
   706  06FC  1186               	bcf	6,3	;volatile
   707                           
   708                           ;LCD.c: 35: _delay((unsigned long)((50)*(4000000/4000.0)));
   709  06FD  3041               	movlw	65
   710  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   711  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   712  0700  00B0               	movwf	??_LCD_init+1
   713  0701  30EE               	movlw	238
   714  0702  00AF               	movwf	??_LCD_init
   715  0703                     u527:
   716  0703  0BAF               	decfsz	??_LCD_init,f
   717  0704  2F03               	goto	u527
   718  0705  0BB0               	decfsz	??_LCD_init+1,f
   719  0706  2F03               	goto	u527
   720                           
   721                           ;LCD.c: 36: LCD_cmd(0x02);
   722  0707  3002               	movlw	2
   723  0708  118A  2690  118A   	fcall	_LCD_cmd
   724                           
   725                           ;LCD.c: 37: LCD_cmd(0x28);
   726  070B  3028               	movlw	40
   727  070C  118A  2690  118A   	fcall	_LCD_cmd
   728                           
   729                           ;LCD.c: 38: LCD_cmd(0x0C);
   730  070F  300C               	movlw	12
   731  0710  118A  2690  118A   	fcall	_LCD_cmd
   732                           
   733                           ;LCD.c: 39: LCD_cmd(0x06);
   734  0713  3006               	movlw	6
   735  0714  118A  2690  118A   	fcall	_LCD_cmd
   736                           
   737                           ;LCD.c: 40: LCD_cmd(0X01);
   738  0717  3001               	movlw	1
   739  0718  118A  2690  118A   	fcall	_LCD_cmd
   740                           
   741                           ;LCD.c: 41: _delay((unsigned long)((300)*(4000000/4000.0)));
   742  071B  3002               	movlw	2
   743  071C  1283               	bcf	3,5	;RP0=0, select bank0
   744  071D  1303               	bcf	3,6	;RP1=0, select bank0
   745  071E  00B1               	movwf	??_LCD_init+2
   746  071F  3086               	movlw	134
   747  0720  00B0               	movwf	??_LCD_init+1
   748  0721  3098               	movlw	152
   749  0722  00AF               	movwf	??_LCD_init
   750  0723                     u537:
   751  0723  0BAF               	decfsz	??_LCD_init,f
   752  0724  2F23               	goto	u537
   753  0725  0BB0               	decfsz	??_LCD_init+1,f
   754  0726  2F23               	goto	u537
   755  0727  0BB1               	decfsz	??_LCD_init+2,f
   756  0728  2F23               	goto	u537
   757  0729  2F2A               	nop2
   758  072A  0008               	return
   759  072B                     __end_of_LCD_init:
   760                           
   761                           	psect	text2
   762  0690                     __ptext2:	
   763 ;; *************** function _LCD_cmd *****************
   764 ;; Defined at:
   765 ;;		line 72 in file "LCD.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  dato            1    wreg     unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  dato            1    3[BANK0 ] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1
   779 ;;      Params:         0       0       0
   780 ;;      Locals:         0       1       0
   781 ;;      Temps:          0       0       0
   782 ;;      Totals:         0       1       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 1
   786 ;; This function calls:
   787 ;;		_LCD_write
   788 ;; This function is called by:
   789 ;;		_LCD_init
   790 ;;		_LCD_goto
   791 ;;		_LCD_cursor
   792 ;;		_LCD_segunda_linea
   793 ;;		_LCD_clear
   794 ;;		_LCD_home
   795 ;;		_LCD_custom_char
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799  0690                     _LCD_cmd:	
   800                           ;psect for function _LCD_cmd
   801                           
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
   805                           ;LCD_cmd@dato stored from wreg
   806  0690  1283               	bcf	3,5	;RP0=0, select bank0
   807  0691  1303               	bcf	3,6	;RP1=0, select bank0
   808  0692  00AE               	movwf	LCD_cmd@dato
   809                           
   810                           ;LCD.c: 75: PORTAbits.RA2 = 0;
   811  0693  1105               	bcf	5,2	;volatile
   812                           
   813                           ;LCD.c: 76: LCD_write(dato);
   814  0694  082E               	movf	LCD_cmd@dato,w
   815  0695  118A  272B         	fcall	_LCD_write
   816  0697  0008               	return
   817  0698                     __end_of_LCD_cmd:
   818                           
   819                           	psect	text3
   820  0688                     __ptext3:	
   821 ;; *************** function _LCD_dato *****************
   822 ;; Defined at:
   823 ;;		line 88 in file "LCD.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  dato            1    wreg     unsigned char 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  dato            1    3[BANK0 ] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1
   837 ;;      Params:         0       0       0
   838 ;;      Locals:         0       1       0
   839 ;;      Temps:          0       0       0
   840 ;;      Totals:         0       1       0
   841 ;;Total ram usage:        1 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 1
   844 ;; This function calls:
   845 ;;		_LCD_write
   846 ;; This function is called by:
   847 ;;		_main
   848 ;;		_putch
   849 ;;		_LCD_printf
   850 ;;		_LCD_custom_char
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854  0688                     _LCD_dato:	
   855                           ;psect for function _LCD_dato
   856                           
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _LCD_dato: [wreg+status,2+status,0+pclath+cstack]
   860                           ;LCD_dato@dato stored from wreg
   861  0688  1283               	bcf	3,5	;RP0=0, select bank0
   862  0689  1303               	bcf	3,6	;RP1=0, select bank0
   863  068A  00AE               	movwf	LCD_dato@dato
   864                           
   865                           ;LCD.c: 91: PORTAbits.RA2 = 1;
   866  068B  1505               	bsf	5,2	;volatile
   867                           
   868                           ;LCD.c: 92: LCD_write(dato);
   869  068C  082E               	movf	LCD_dato@dato,w
   870  068D  118A  272B         	fcall	_LCD_write
   871  068F  0008               	return
   872  0690                     __end_of_LCD_dato:
   873                           
   874                           	psect	text4
   875  072B                     __ptext4:	
   876 ;; *************** function _LCD_write *****************
   877 ;; Defined at:
   878 ;;		line 48 in file "LCD.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  dato            1    wreg     unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  dato            1    2[BANK0 ] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1
   892 ;;      Params:         0       0       0
   893 ;;      Locals:         0       1       0
   894 ;;      Temps:          0       2       0
   895 ;;      Totals:         0       3       0
   896 ;;Total ram usage:        3 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_LCD_cmd
   902 ;;		_LCD_dato
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906  072B                     _LCD_write:	
   907                           ;psect for function _LCD_write
   908                           
   909                           
   910                           ;incstack = 0
   911                           ; Regs used in _LCD_write: [wreg+status,2+status,0]
   912                           ;LCD_write@dato stored from wreg
   913  072B  1283               	bcf	3,5	;RP0=0, select bank0
   914  072C  1303               	bcf	3,6	;RP1=0, select bank0
   915  072D  00AD               	movwf	LCD_write@dato
   916                           
   917                           ;LCD.c: 50: if (dato & (1<<4)) PORTCbits.RC0 = 1; else PORTCbits.RC0 = 0;
   918  072E  1E2D               	btfss	LCD_write@dato,4
   919  072F  2F32               	goto	l117
   920  0730  1407               	bsf	7,0	;volatile
   921  0731  2F33               	goto	l118
   922  0732                     l117:
   923  0732  1007               	bcf	7,0	;volatile
   924  0733                     l118:
   925                           
   926                           ;LCD.c: 51: if (dato & (1<<5)) PORTCbits.RC1 = 1; else PORTCbits.RC1 = 0;
   927  0733  1EAD               	btfss	LCD_write@dato,5
   928  0734  2F37               	goto	l119
   929  0735  1487               	bsf	7,1	;volatile
   930  0736  2F38               	goto	l120
   931  0737                     l119:
   932  0737  1087               	bcf	7,1	;volatile
   933  0738                     l120:
   934                           
   935                           ;LCD.c: 52: if (dato & (1<<6)) PORTCbits.RC2 = 1; else PORTCbits.RC2 = 0;
   936  0738  1F2D               	btfss	LCD_write@dato,6
   937  0739  2F3C               	goto	l121
   938  073A  1507               	bsf	7,2	;volatile
   939  073B  2F3D               	goto	l122
   940  073C                     l121:
   941  073C  1107               	bcf	7,2	;volatile
   942  073D                     l122:
   943                           
   944                           ;LCD.c: 53: if (dato & (1<<7)) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
   945  073D  1FAD               	btfss	LCD_write@dato,7
   946  073E  2F41               	goto	l123
   947  073F  1586               	bsf	6,3	;volatile
   948  0740  2F42               	goto	l124
   949  0741                     l123:
   950  0741  1186               	bcf	6,3	;volatile
   951  0742                     l124:
   952                           
   953                           ;LCD.c: 54: PORTAbits.RA3 = 1;
   954  0742  1585               	bsf	5,3	;volatile
   955                           
   956                           ;LCD.c: 55: __nop();
   957  0743  0000               	nop
   958                           
   959                           ;LCD.c: 56: PORTAbits.RA3 = 0;
   960  0744  1283               	bcf	3,5	;RP0=0, select bank0
   961  0745  1303               	bcf	3,6	;RP1=0, select bank0
   962  0746  1185               	bcf	5,3	;volatile
   963                           
   964                           ;LCD.c: 58: dato = (dato << 4);
   965  0747  082D               	movf	LCD_write@dato,w
   966  0748  00AB               	movwf	??_LCD_write
   967  0749  3003               	movlw	3
   968  074A                     u305:
   969  074A  1003               	clrc
   970  074B  0DAB               	rlf	??_LCD_write,f
   971  074C  3EFF               	addlw	-1
   972  074D  1D03               	skipz
   973  074E  2F4A               	goto	u305
   974  074F  1003               	clrc
   975  0750  0D2B               	rlf	??_LCD_write,w
   976  0751  00AC               	movwf	??_LCD_write+1
   977  0752  082C               	movf	??_LCD_write+1,w
   978  0753  00AD               	movwf	LCD_write@dato
   979                           
   980                           ;LCD.c: 59: if (dato & (1<<4)) PORTCbits.RC0 = 1; else PORTCbits.RC0 = 0;
   981  0754  1E2D               	btfss	LCD_write@dato,4
   982  0755  2F58               	goto	l125
   983  0756  1407               	bsf	7,0	;volatile
   984  0757  2F59               	goto	l126
   985  0758                     l125:
   986  0758  1007               	bcf	7,0	;volatile
   987  0759                     l126:
   988                           
   989                           ;LCD.c: 60: if (dato & (1<<5)) PORTCbits.RC1 = 1; else PORTCbits.RC1 = 0;
   990  0759  1EAD               	btfss	LCD_write@dato,5
   991  075A  2F5D               	goto	l127
   992  075B  1487               	bsf	7,1	;volatile
   993  075C  2F5E               	goto	l128
   994  075D                     l127:
   995  075D  1087               	bcf	7,1	;volatile
   996  075E                     l128:
   997                           
   998                           ;LCD.c: 61: if (dato & (1<<6)) PORTCbits.RC2 = 1; else PORTCbits.RC2 = 0;
   999  075E  1F2D               	btfss	LCD_write@dato,6
  1000  075F  2F62               	goto	l129
  1001  0760  1507               	bsf	7,2	;volatile
  1002  0761  2F63               	goto	l130
  1003  0762                     l129:
  1004  0762  1107               	bcf	7,2	;volatile
  1005  0763                     l130:
  1006                           
  1007                           ;LCD.c: 62: if (dato & (1<<7)) PORTBbits.RB3 = 1; else PORTBbits.RB3 = 0;
  1008  0763  1FAD               	btfss	LCD_write@dato,7
  1009  0764  2F67               	goto	l131
  1010  0765  1586               	bsf	6,3	;volatile
  1011  0766  2F68               	goto	l132
  1012  0767                     l131:
  1013  0767  1186               	bcf	6,3	;volatile
  1014  0768                     l132:
  1015                           
  1016                           ;LCD.c: 63: PORTAbits.RA3 = 1;
  1017  0768  1585               	bsf	5,3	;volatile
  1018                           
  1019                           ;LCD.c: 64: __nop();
  1020  0769  0000               	nop
  1021                           
  1022                           ;LCD.c: 65: PORTAbits.RA3 = 0;
  1023  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  076C  1185               	bcf	5,3	;volatile
  1026                           
  1027                           ;LCD.c: 66: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1028  076D  3010               	movlw	16
  1029  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1030  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0770  00AB               	movwf	??_LCD_write
  1032  0771                     u547:
  1033  0771  0BAB               	decfsz	??_LCD_write,f
  1034  0772  2F71               	goto	u547
  1035  0773  0008               	return
  1036  0774                     __end_of_LCD_write:
  1037                           
  1038                           	psect	text5
  1039  0698                     __ptext5:	
  1040 ;; *************** function _I2C_write *****************
  1041 ;; Defined at:
  1042 ;;		line 60 in file "I2C.h"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  I2C_data        1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  I2C_data        1    0[BANK0 ] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      unsigned char 
  1049 ;; Registers used:
  1050 ;;		wreg
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1
  1056 ;;      Params:         0       0       0
  1057 ;;      Locals:         0       1       0
  1058 ;;      Temps:          0       0       0
  1059 ;;      Totals:         0       1       0
  1060 ;;Total ram usage:        1 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069  0698                     _I2C_write:	
  1070                           ;psect for function _I2C_write
  1071                           
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _I2C_write: [wreg]
  1075                           ;I2C_write@I2C_data stored from wreg
  1076  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1078  069A  00AB               	movwf	I2C_write@I2C_data
  1079                           
  1080                           ;I2C.h: 61: PIR1bits.SSPIF = 0;
  1081  069B  118C               	bcf	12,3	;volatile
  1082                           
  1083                           ;I2C.h: 62: SSPBUF = I2C_data;
  1084  069C  082B               	movf	I2C_write@I2C_data,w
  1085  069D  0093               	movwf	19	;volatile
  1086  069E                     l68:	
  1087                           ;I2C.h: 63: while(PIR1bits.SSPIF == 0);
  1088                           
  1089  069E  198C               	btfsc	12,3	;volatile
  1090  069F  0008               	return
  1091  06A0  2E9E               	goto	l68
  1092  06A1                     __end_of_I2C_write:	
  1093                           ;I2C.h: 64: if(ACKSTAT)
  1094                           
  1095                           
  1096                           	psect	text6
  1097  0682                     __ptext6:	
  1098 ;; *************** function _I2C_stop *****************
  1099 ;; Defined at:
  1100 ;;		line 30 in file "I2C.h"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		None
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1
  1114 ;;      Params:         0       0       0
  1115 ;;      Locals:         0       0       0
  1116 ;;      Temps:          0       0       0
  1117 ;;      Totals:         0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127  0682                     _I2C_stop:	
  1128                           ;psect for function _I2C_stop
  1129                           
  1130                           
  1131                           ;I2C.h: 32: SSPCON2bits.PEN = 1;
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _I2C_stop: []
  1135  0682  1683               	bsf	3,5	;RP0=1, select bank1
  1136  0683  1303               	bcf	3,6	;RP1=0, select bank1
  1137  0684  1511               	bsf	17,2	;volatile
  1138  0685                     l44:	
  1139                           ;I2C.h: 33: while(SSPCON2bits.PEN == 1);
  1140                           
  1141  0685  1D11               	btfss	17,2	;volatile
  1142  0686  0008               	return
  1143  0687  2E85               	goto	l44
  1144  0688                     __end_of_I2C_stop:
  1145                           
  1146                           	psect	text7
  1147  067C                     __ptext7:	
  1148 ;; *************** function _I2C_start *****************
  1149 ;; Defined at:
  1150 ;;		line 18 in file "I2C.h"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		None
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1
  1164 ;;      Params:         0       0       0
  1165 ;;      Locals:         0       0       0
  1166 ;;      Temps:          0       0       0
  1167 ;;      Totals:         0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177  067C                     _I2C_start:	
  1178                           ;psect for function _I2C_start
  1179                           
  1180                           
  1181                           ;I2C.h: 20: SSPCON2bits.SEN = 1;
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _I2C_start: []
  1185  067C  1683               	bsf	3,5	;RP0=1, select bank1
  1186  067D  1303               	bcf	3,6	;RP1=0, select bank1
  1187  067E  1411               	bsf	17,0	;volatile
  1188  067F                     l32:	
  1189                           ;I2C.h: 21: while(SSPCON2bits.SEN == 1);
  1190                           
  1191  067F  1C11               	btfss	17,0	;volatile
  1192  0680  0008               	return
  1193  0681  2E7F               	goto	l32
  1194  0682                     __end_of_I2C_start:
  1195                           
  1196                           	psect	text8
  1197  0676                     __ptext8:	
  1198 ;; *************** function _I2C_restart *****************
  1199 ;; Defined at:
  1200 ;;		line 24 in file "I2C.h"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1
  1214 ;;      Params:         0       0       0
  1215 ;;      Locals:         0       0       0
  1216 ;;      Temps:          0       0       0
  1217 ;;      Totals:         0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227  0676                     _I2C_restart:	
  1228                           ;psect for function _I2C_restart
  1229                           
  1230                           
  1231                           ;I2C.h: 26: SSPCON2bits.RSEN = 1;
  1232                           
  1233                           ;incstack = 0
  1234                           ; Regs used in _I2C_restart: []
  1235  0676  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0677  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0678  1491               	bsf	17,1	;volatile
  1238  0679                     l38:	
  1239                           ;I2C.h: 27: while(SSPCON2bits.RSEN == 1);
  1240                           
  1241  0679  1C91               	btfss	17,1	;volatile
  1242  067A  0008               	return
  1243  067B  2E79               	goto	l38
  1244  067C                     __end_of_I2C_restart:
  1245                           
  1246                           	psect	text9
  1247  06B7                     __ptext9:	
  1248 ;; *************** function _I2C_read *****************
  1249 ;; Defined at:
  1250 ;;		line 36 in file "I2C.h"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      unsigned char 
  1257 ;; Registers used:
  1258 ;;		wreg
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1
  1264 ;;      Params:         0       0       0
  1265 ;;      Locals:         0       0       0
  1266 ;;      Temps:          0       0       0
  1267 ;;      Totals:         0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277  06B7                     _I2C_read:	
  1278                           ;psect for function _I2C_read
  1279                           
  1280                           
  1281                           ;I2C.h: 38: PIR1bits.SSPIF = 0;
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _I2C_read: [wreg]
  1285  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1286  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1287  06B9  118C               	bcf	12,3	;volatile
  1288                           
  1289                           ;I2C.h: 39: SSPCON2bits.RCEN = 1;
  1290  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  1291  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  1292  06BC  1591               	bsf	17,3	;volatile
  1293  06BD                     l50:	
  1294                           ;I2C.h: 40: while(PIR1bits.SSPIF == 0);
  1295                           
  1296  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1297  06BE  1D8C               	btfss	12,3	;volatile
  1298  06BF  2EBD               	goto	l50
  1299                           
  1300                           ;I2C.h: 41: return SSPBUF;
  1301  06C0  0813               	movf	19,w	;volatile
  1302  06C1  0008               	return
  1303  06C2                     __end_of_I2C_read:
  1304                           
  1305                           	psect	text10
  1306  06AC                     __ptext10:	
  1307 ;; *************** function _I2C_nack *****************
  1308 ;; Defined at:
  1309 ;;		line 52 in file "I2C.h"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		None
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1
  1323 ;;      Params:         0       0       0
  1324 ;;      Locals:         0       0       0
  1325 ;;      Temps:          0       0       0
  1326 ;;      Totals:         0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336  06AC                     _I2C_nack:	
  1337                           ;psect for function _I2C_nack
  1338                           
  1339                           
  1340                           ;I2C.h: 54: PIR1bits.SSPIF = 0;
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _I2C_nack: []
  1344  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1345  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1346  06AE  118C               	bcf	12,3	;volatile
  1347                           
  1348                           ;I2C.h: 55: SSPCON2bits.ACKDT = 1;
  1349  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  1350  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  1351  06B1  1691               	bsf	17,5	;volatile
  1352                           
  1353                           ;I2C.h: 56: SSPCON2bits.ACKEN = 1;
  1354  06B2  1611               	bsf	17,4	;volatile
  1355  06B3                     l62:	
  1356                           ;I2C.h: 57: while(PIR1bits.SSPIF == 0);
  1357                           
  1358  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1359  06B4  198C               	btfsc	12,3	;volatile
  1360  06B5  0008               	return
  1361  06B6  2EB3               	goto	l62
  1362  06B7                     __end_of_I2C_nack:
  1363                           
  1364                           	psect	text11
  1365  06CD                     __ptext11:	
  1366 ;; *************** function _I2C_init *****************
  1367 ;; Defined at:
  1368 ;;		line 7 in file "I2C.h"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1
  1382 ;;      Params:         0       0       0
  1383 ;;      Locals:         0       0       0
  1384 ;;      Temps:          0       0       0
  1385 ;;      Totals:         0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395  06CD                     _I2C_init:	
  1396                           ;psect for function _I2C_init
  1397                           
  1398                           
  1399                           ;I2C.h: 9: TRISCbits.TRISC3 = 1;
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _I2C_init: [wreg+status,2]
  1403  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1404  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  1405  06CF  1587               	bsf	7,3	;volatile
  1406                           
  1407                           ;I2C.h: 10: TRISCbits.TRISC4 = 1;
  1408  06D0  1607               	bsf	7,4	;volatile
  1409                           
  1410                           ;I2C.h: 12: SSPSTAT = 0b10000000;
  1411  06D1  3080               	movlw	128
  1412  06D2  0094               	movwf	20	;volatile
  1413                           
  1414                           ;I2C.h: 13: SSPCON = 0b00101000;
  1415  06D3  3028               	movlw	40
  1416  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1417  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1418  06D6  0094               	movwf	20	;volatile
  1419                           
  1420                           ;I2C.h: 14: SSPCON2 = 0x00;
  1421  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1422  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1423  06D9  0191               	clrf	17	;volatile
  1424                           
  1425                           ;I2C.h: 15: SSPADD = ((4000000/(4UL*100000UL))-1);
  1426  06DA  3009               	movlw	9
  1427  06DB  0093               	movwf	19	;volatile
  1428  06DC  0008               	return
  1429  06DD                     __end_of_I2C_init:
  1430                           
  1431                           	psect	text12
  1432  06A1                     __ptext12:	
  1433 ;; *************** function _I2C_ack *****************
  1434 ;; Defined at:
  1435 ;;		line 44 in file "I2C.h"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		None
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1
  1449 ;;      Params:         0       0       0
  1450 ;;      Locals:         0       0       0
  1451 ;;      Temps:          0       0       0
  1452 ;;      Totals:         0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462  06A1                     _I2C_ack:	
  1463                           ;psect for function _I2C_ack
  1464                           
  1465                           
  1466                           ;I2C.h: 46: PIR1bits.SSPIF = 0;
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _I2C_ack: []
  1470  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1471  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1472  06A3  118C               	bcf	12,3	;volatile
  1473                           
  1474                           ;I2C.h: 47: SSPCON2bits.ACKDT = 0;
  1475  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1476  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1477  06A6  1291               	bcf	17,5	;volatile
  1478                           
  1479                           ;I2C.h: 48: SSPCON2bits.ACKEN = 1;
  1480  06A7  1611               	bsf	17,4	;volatile
  1481  06A8                     l56:	
  1482                           ;I2C.h: 49: while(PIR1bits.SSPIF == 0);
  1483                           
  1484  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1485  06A9  198C               	btfsc	12,3	;volatile
  1486  06AA  0008               	return
  1487  06AB  2EA8               	goto	l56
  1488  06AC                     __end_of_I2C_ack:
  1489  007E                     btemp	set	126	;btemp
  1490  007E                     wtemp0	set	126
  1491                           
  1492                           	psect	idloc
  1493                           
  1494                           ;Config register IDLOC0 @ 0x2000
  1495                           ;	unspecified, using default values
  1496  2000                     	org	8192
  1497  2000  3FFF               	dw	16383
  1498                           
  1499                           ;Config register IDLOC1 @ 0x2001
  1500                           ;	unspecified, using default values
  1501  2001                     	org	8193
  1502  2001  3FFF               	dw	16383
  1503                           
  1504                           ;Config register IDLOC2 @ 0x2002
  1505                           ;	unspecified, using default values
  1506  2002                     	org	8194
  1507  2002  3FFF               	dw	16383
  1508                           
  1509                           ;Config register IDLOC3 @ 0x2003
  1510                           ;	unspecified, using default values
  1511  2003                     	org	8195
  1512  2003  3FFF               	dw	16383
  1513                           
  1514                           	psect	config
  1515                           
  1516                           ;Config register CONFIG @ 0x2007
  1517                           ;	Oscillator Selection bits
  1518                           ;	FOSC = XT, XT oscillator
  1519                           ;	Watchdog Timer Enable bit
  1520                           ;	WDTE = OFF, WDT disabled
  1521                           ;	Power-up Timer Enable bit
  1522                           ;	PWRTE = ON, PWRT enabled
  1523                           ;	Brown-out Reset Enable bit
  1524                           ;	BOREN = OFF, BOR disabled
  1525                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1526                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1527                           ;	Data EEPROM Memory Code Protection bit
  1528                           ;	CPD = OFF, Data EEPROM code protection off
  1529                           ;	Flash Program Memory Write Enable bits
  1530                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1531                           ;	In-Circuit Debugger Mode bit
  1532                           ;	DEBUG = 0x1, unprogrammed default
  1533                           ;	Flash Program Memory Code Protection bit
  1534                           ;	CP = OFF, Code protection off
  1535  2007                     	org	8199
  1536  2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     11      30
    BANK1            94      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> LCD_integer@st(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 8
		 -> LCD_integer@st(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_init
    _LCD_init->_LCD_cmd
    _LCD_cmd->_LCD_write
    _LCD_dato->_LCD_write

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     600
                                              7 BANK0      4     4      0
                            _I2C_ack
                           _I2C_init
                           _I2C_nack
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                           _LCD_dato
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             3     3      0     221
                                              4 BANK0      3     3      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0     221
                                              3 BANK0      1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _LCD_dato                                             1     1      0     221
                                              3 BANK0      1     1      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_write                                            3     3      0     199
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_write                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ack
   _I2C_init
   _I2C_nack
   _I2C_read
   _I2C_restart
   _I2C_start
   _I2C_stop
   _I2C_write
   _LCD_dato
     _LCD_write
   _LCD_init
     _LCD_cmd
       _LCD_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E      B      1E       4       31.9%
BITBANK0            5E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E       8        0.0%
ABS                  0      0      1E       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 21:04:05 2022

                      pc 0002                       l32 067F                       l50 06BD  
                     l44 0685                       l62 06B3                       l38 0679  
                     l56 06A8                       l68 069E                       l86 07E9  
                     fsr 0004                      l120 0738                      l121 073C  
                    l130 0763                      l122 073D                      l131 0767  
                    l123 0741                      l132 0768                      l124 0742  
                    l125 0758                      l117 0732                      l126 0759  
                    l118 0733                      l127 075D                      l119 0737  
                    l128 075E                      l129 0762                      u305 074A  
                    u517 07AB                      u527 0703                      u537 0723  
                    u547 0771                      fsr0 0004                      indf 0000  
        __end_of_I2C_ack 06AC          __end_of_LCD_cmd 0698                     l1060 07DC  
                   l1052 07C9                     l1028 0790                     l1058 07D9  
                   _main 0774                     btemp 007E         __end_of_I2C_nack 06B7  
       __end_of_I2C_init 06DD         __end_of_I2C_read 06C2                     start 0000  
       __end_of_I2C_stop 0688         __end_of_LCD_dato 0690         __end_of_LCD_init 072B  
                  ?_main 002B                    _datos 0020              LCD_cmd@dato 002E  
                  main@i 0034                    pclath 000A                    status 0003  
      __end_of_I2C_start 0682                    wtemp0 007E        __end_of_I2C_write 06A1  
        __initialization 07EA        I2C_write@I2C_data 002B             __end_of_main 07EA  
              ??_I2C_ack 0000                   ??_main 0032                ??_LCD_cmd 0000  
      __end_of_LCD_write 0774                   _ADCON1 009F                   _SSPADD 0093  
                 _SSPCON 0014                   _SSPBUF 0013          LCD_integer@F955 0036  
           LCD_dato@dato 002E                ?_I2C_nack 002B                ?_I2C_init 002B  
              ?_I2C_read 002B                ?_I2C_stop 002B  __end_of__initialization 07FD  
              ?_LCD_dato 002B                ?_LCD_init 002B           __pcstackCOMMON 0000  
           __pidataBANK0 06C2               ??_I2C_nack 0000               ??_I2C_init 0000  
             ??_I2C_read 0000               ??_I2C_stop 0000               __pbssBANK0 0036  
             ??_LCD_dato 0000               ??_LCD_init 002F               __pmaintext 0774  
                _ACKSTAT 048E                  _I2C_ack 06A1                  _LCD_cmd 0690  
                _SSPCON2 0091                  _SSPSTAT 0094            ??_I2C_restart 0000  
              _I2C_start 067C                _I2C_write 0698                  __ptext1 06ED  
                __ptext2 0690                  __ptext3 0688                  __ptext4 072B  
                __ptext5 0698                  __ptext6 0682                  __ptext7 067C  
                __ptext8 0676                  __ptext9 06B7     end_of_initialization 07FD  
              _LCD_write 072B               ?_I2C_start 002B               ?_I2C_write 002B  
    __end_of_I2C_restart 067C                _PORTAbits 0005                _PORTBbits 0006  
              _PORTCbits 0007                _TRISAbits 0085                _TRISBbits 0086  
              _TRISCbits 0087               ?_LCD_write 002B      start_initialization 07EA  
            _I2C_restart 0676              ??_I2C_start 0000              ??_I2C_write 0000  
             init_fetch0 06DD              __pdataBANK0 0020                 ?_I2C_ack 002B  
               ?_LCD_cmd 002B                ___latbits 0001            __pcstackBANK0 002B  
            ??_LCD_write 002B            LCD_write@dato 002D                 _I2C_nack 06AC  
               _I2C_init 06CD                 _I2C_read 06B7                 _I2C_stop 0682  
               _LCD_dato 0688                 _LCD_init 06ED                 _PIR1bits 000C  
              main@i_149 0035                 __ptext10 06AC                 __ptext11 06CD  
               __ptext12 06A1             ?_I2C_restart 002B                 init_ram0 06E1  
            _SSPCON2bits 0091  
