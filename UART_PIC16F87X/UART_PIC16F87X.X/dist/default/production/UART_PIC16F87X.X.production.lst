

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 14:46:03 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0006                     _PORTBbits	set	6
   172  0019                     _TXREG	set	25
   173  001A                     _RCREG	set	26
   174  000C                     _PIR1bits	set	12
   175  0018                     _RCSTAbits	set	24
   176  0086                     _TRISBbits	set	134
   177  0099                     _SPBRG	set	153
   178  0098                     _TXSTAbits	set	152
   179  0087                     _TRISCbits	set	135
   180                           
   181                           	psect	strings
   182  0003                     __pstrings:
   183  0003                     stringtab:
   184  0003                     __stringtab:
   185  0003                     stringcode:	
   186                           ;	String table - string pointers are 1 byte each
   187                           
   188  0003                     stringdir:
   189  0003  3000               	movlw	high stringdir
   190  0004  008A               	movwf	10
   191  0005  0804               	movf	4,w
   192  0006  0A84               	incf	4,f
   193  0007  0782               	addwf	2,f
   194  0008                     __stringbase:
   195  0008  3400               	retlw	0
   196  0009                     __end_of__stringtab:
   197  0009                     STR_1:
   198  0009  3445               	retlw	69	;'E'
   199  000A  346E               	retlw	110	;'n'
   200  000B  3463               	retlw	99	;'c'
   201  000C  3465               	retlw	101	;'e'
   202  000D  346E               	retlw	110	;'n'
   203  000E  3464               	retlw	100	;'d'
   204  000F  3465               	retlw	101	;'e'
   205  0010  3472               	retlw	114	;'r'
   206  0011  3420               	retlw	32	;' '
   207  0012  346C               	retlw	108	;'l'
   208  0013  3465               	retlw	101	;'e'
   209  0014  3464               	retlw	100	;'d'
   210  0015  3420               	retlw	32	;' '
   211  0016  3463               	retlw	99	;'c'
   212  0017  346F               	retlw	111	;'o'
   213  0018  346E               	retlw	110	;'n'
   214  0019  3420               	retlw	32	;' '
   215  001A  3431               	retlw	49	;'1'
   216  001B  3420               	retlw	32	;' '
   217  001C  3479               	retlw	121	;'y'
   218  001D  3420               	retlw	32	;' '
   219  001E  3461               	retlw	97	;'a'
   220  001F  3470               	retlw	112	;'p'
   221  0020  3461               	retlw	97	;'a'
   222  0021  3467               	retlw	103	;'g'
   223  0022  3461               	retlw	97	;'a'
   224  0023  3472               	retlw	114	;'r'
   225  0024  3420               	retlw	32	;' '
   226  0025  346C               	retlw	108	;'l'
   227  0026  3465               	retlw	101	;'e'
   228  0027  3464               	retlw	100	;'d'
   229  0028  3420               	retlw	32	;' '
   230  0029  3463               	retlw	99	;'c'
   231  002A  346F               	retlw	111	;'o'
   232  002B  346E               	retlw	110	;'n'
   233  002C  3420               	retlw	32	;' '
   234  002D  3430               	retlw	48	;'0'
   235  002E  340A               	retlw	10
   236  002F  340D               	retlw	13
   237  0030  3400               	retlw	0
   238  0031                     STR_2:
   239  0031  346C               	retlw	108	;'l'
   240  0032  3465               	retlw	101	;'e'
   241  0033  3464               	retlw	100	;'d'
   242  0034  3420               	retlw	32	;' '
   243  0035  3465               	retlw	101	;'e'
   244  0036  346E               	retlw	110	;'n'
   245  0037  3463               	retlw	99	;'c'
   246  0038  3465               	retlw	101	;'e'
   247  0039  346E               	retlw	110	;'n'
   248  003A  3464               	retlw	100	;'d'
   249  003B  3469               	retlw	105	;'i'
   250  003C  3464               	retlw	100	;'d'
   251  003D  346F               	retlw	111	;'o'
   252  003E  3420               	retlw	32	;' '
   253  003F  340A               	retlw	10
   254  0040  340D               	retlw	13
   255  0041  3400               	retlw	0
   256  0042                     STR_3:
   257  0042  346C               	retlw	108	;'l'
   258  0043  3465               	retlw	101	;'e'
   259  0044  3464               	retlw	100	;'d'
   260  0045  3420               	retlw	32	;' '
   261  0046  3461               	retlw	97	;'a'
   262  0047  3470               	retlw	112	;'p'
   263  0048  3461               	retlw	97	;'a'
   264  0049  3467               	retlw	103	;'g'
   265  004A  3461               	retlw	97	;'a'
   266  004B  3464               	retlw	100	;'d'
   267  004C  346F               	retlw	111	;'o'
   268  004D  3420               	retlw	32	;' '
   269  004E  340A               	retlw	10
   270  004F  340D               	retlw	13
   271  0050  3400               	retlw	0
   272                           
   273                           	psect	cinit
   274  07FC                     start_initialization:	
   275                           ; #config settings
   276                           
   277  07FC                     __initialization:
   278  07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  07FC                     __end_of__initialization:
   282  07FC  0183               	clrf	3
   283  07FD  120A  118A  2FC1   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	cstackCOMMON
   286  0070                     __pcstackCOMMON:
   287  0070                     ?_UART_init:
   288  0070                     ??_UART_init:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_UART_read:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ??_UART_read:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_UART_write:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_UART_write:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_UART_printf:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     UART_write@dato:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 1 bytes @ 0x0
   314  0070                     	ds	1
   315  0071                     ??_UART_printf:
   316                           
   317                           ; 1 bytes @ 0x1
   318  0071                     	ds	1
   319  0072                     UART_printf@cadena:
   320                           
   321                           ; 1 bytes @ 0x2
   322  0072                     	ds	1
   323  0073                     ??_main:
   324                           
   325                           ; 1 bytes @ 0x3
   326  0073                     	ds	1
   327  0074                     main@dato_rx:
   328                           
   329                           ; 1 bytes @ 0x4
   330  0074                     	ds	1
   331                           
   332                           	psect	maintext
   333  07C1                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 24 in file "main.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  dato_rx         1    4[COMMON] unsigned char 
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         1       0       0       0       0
   355 ;;      Temps:          1       0       0       0       0
   356 ;;      Totals:         2       0       0       0       0
   357 ;;Total ram usage:        2 bytes
   358 ;; Hardware stack levels required when called: 2
   359 ;; This function calls:
   360 ;;		_UART_init
   361 ;;		_UART_printf
   362 ;;		_UART_read
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368  07C1                     _main:	
   369                           ;psect for function _main
   370                           
   371  07C1                     l700:	
   372                           ;incstack = 0
   373                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   374                           
   375                           
   376                           ;main.c: 26:     char dato_rx;;main.c: 27:     TRISBbits.TRISB0 = 0;
   377  07C1  1683               	bsf	3,5	;RP0=1, select bank1
   378  07C2  1303               	bcf	3,6	;RP1=0, select bank1
   379  07C3  1006               	bcf	6,0	;volatile
   380                           
   381                           ;main.c: 28:     PORTBbits.RB0 = 0;
   382  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   383  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   384  07C6  1006               	bcf	6,0	;volatile
   385  07C7                     l702:
   386                           
   387                           ;main.c: 30:     UART_init();
   388  07C7  120A  118A  278F  120A  118A  	fcall	_UART_init
   389  07CC                     l704:
   390                           
   391                           ;main.c: 31:     UART_printf("Encender led con 1 y apagar led con 0\n\r");
   392  07CC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   393  07CD  120A  118A  27A2  120A  118A  	fcall	_UART_printf
   394  07D2                     l706:
   395                           
   396                           ;main.c: 34:     {;main.c: 35:         dato_rx = UART_read();
   397  07D2  120A  118A  2779  120A  118A  	fcall	_UART_read
   398  07D7  00F3               	movwf	??_main
   399  07D8  0873               	movf	??_main,w
   400  07D9  00F4               	movwf	main@dato_rx
   401  07DA                     l708:
   402                           
   403                           ;main.c: 37:         if(dato_rx == '1'){
   404  07DA  3031               	movlw	49
   405  07DB  0674               	xorwf	main@dato_rx,w
   406  07DC  1D03               	btfss	3,2
   407  07DD  2FDF               	goto	u71
   408  07DE  2FE0               	goto	u70
   409  07DF                     u71:
   410  07DF  2FE9               	goto	l714
   411  07E0                     u70:
   412  07E0                     l710:
   413                           
   414                           ;main.c: 38:             UART_printf("led encendido \n\r");
   415  07E0  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   416  07E1  120A  118A  27A2  120A  118A  	fcall	_UART_printf
   417  07E6                     l712:
   418                           
   419                           ;main.c: 39:             PORTBbits.RB0 = 1;
   420  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   421  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   422  07E8  1406               	bsf	6,0	;volatile
   423  07E9                     l714:
   424                           
   425                           ;main.c: 42:         if(dato_rx == '0'){
   426  07E9  3030               	movlw	48
   427  07EA  0674               	xorwf	main@dato_rx,w
   428  07EB  1D03               	btfss	3,2
   429  07EC  2FEE               	goto	u81
   430  07ED  2FEF               	goto	u80
   431  07EE                     u81:
   432  07EE  2FD2               	goto	l706
   433  07EF                     u80:
   434  07EF                     l716:
   435                           
   436                           ;main.c: 43:             UART_printf("led apagado \n\r");
   437  07EF  303A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   438  07F0  120A  118A  27A2  120A  118A  	fcall	_UART_printf
   439  07F5                     l718:
   440                           
   441                           ;main.c: 44:             PORTBbits.RB0 = 0;
   442  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   443  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   444  07F7  1006               	bcf	6,0	;volatile
   445  07F8  2FD2               	goto	l706
   446  07F9  120A  118A  2800   	ljmp	start
   447  07FC                     __end_of_main:
   448                           
   449                           	psect	text1
   450  0779                     __ptext1:	
   451 ;; *************** function _UART_read *****************
   452 ;; Defined at:
   453 ;;		line 31 in file "./UART.h"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      unsigned char 
   460 ;; Registers used:
   461 ;;		wreg
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480  0779                     _UART_read:	
   481                           ;psect for function _UART_read
   482                           
   483  0779                     l652:	
   484                           ;incstack = 0
   485                           ; Regs used in _UART_read: [wreg]
   486                           
   487                           
   488                           ;./UART.h: 33:     if (PIR1bits.RCIF == 1)
   489  0779  1283               	bcf	3,5	;RP0=0, select bank0
   490  077A  1303               	bcf	3,6	;RP1=0, select bank0
   491  077B  1E8C               	btfss	12,5	;volatile
   492  077C  2F7E               	goto	u21
   493  077D  2F7F               	goto	u20
   494  077E                     u21:
   495  077E  2F81               	goto	l660
   496  077F                     u20:
   497  077F                     l654:
   498                           
   499                           ;./UART.h: 34:         return RCREG;
   500  077F  081A               	movf	26,w	;volatile
   501  0780  2F82               	goto	l25
   502  0781                     l660:
   503                           
   504                           ;./UART.h: 36:         return 0;
   505  0781  3000               	movlw	0
   506  0782                     l25:
   507  0782  0008               	return
   508  0783                     __end_of_UART_read:
   509                           
   510                           	psect	text2
   511  07A2                     __ptext2:	
   512 ;; *************** function _UART_printf *****************
   513 ;; Defined at:
   514 ;;		line 45 in file "./UART.h"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  cadena          1    wreg     PTR unsigned char 
   517 ;;		 -> STR_3(15), STR_2(17), STR_1(40), 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  cadena          1    2[COMMON] PTR unsigned char 
   520 ;;		 -> STR_3(15), STR_2(17), STR_1(40), 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         1       0       0       0       0
   532 ;;      Temps:          1       0       0       0       0
   533 ;;      Totals:         2       0       0       0       0
   534 ;;Total ram usage:        2 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 1
   537 ;; This function calls:
   538 ;;		_UART_write
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544  07A2                     _UART_printf:	
   545                           ;psect for function _UART_printf
   546                           
   547                           
   548                           ;incstack = 0
   549                           ; Regs used in _UART_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   550                           ;UART_printf@cadena stored from wreg
   551  07A2  00F2               	movwf	UART_printf@cadena
   552  07A3                     l692:
   553                           
   554                           ;./UART.h: 45: void UART_printf(char *cadena);./UART.h: 46: {;./UART.h: 47:     while(*c
      +                          adena !=0x00){
   555  07A3  2FB4               	goto	l698
   556  07A4                     l694:
   557                           
   558                           ;./UART.h: 48:         UART_write(*cadena);
   559  07A4  0872               	movf	UART_printf@cadena,w
   560  07A5  0084               	movwf	4
   561  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
   562  07AB  120A  118A  2783  120A  118A  	fcall	_UART_write
   563  07B0                     l696:
   564                           
   565                           ;./UART.h: 49:         cadena++;
   566  07B0  3001               	movlw	1
   567  07B1  00F1               	movwf	??_UART_printf
   568  07B2  0871               	movf	??_UART_printf,w
   569  07B3  07F2               	addwf	UART_printf@cadena,f
   570  07B4                     l698:
   571                           
   572                           ;./UART.h: 47:     while(*cadena !=0x00){
   573  07B4  0872               	movf	UART_printf@cadena,w
   574  07B5  0084               	movwf	4
   575  07B6  120A  118A  2003  120A  118A  	fcall	stringdir
   576  07BB  3A00               	xorlw	0
   577  07BC  1D03               	skipz
   578  07BD  2FBF               	goto	u61
   579  07BE  2FC0               	goto	u60
   580  07BF                     u61:
   581  07BF  2FA4               	goto	l694
   582  07C0                     u60:
   583  07C0                     l38:
   584  07C0  0008               	return
   585  07C1                     __end_of_UART_printf:
   586                           
   587                           	psect	text3
   588  0783                     __ptext3:	
   589 ;; *************** function _UART_write *****************
   590 ;; Defined at:
   591 ;;		line 39 in file "./UART.h"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  dato            1    wreg     unsigned char 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  dato            1    0[COMMON] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         1       0       0       0       0
   609 ;;Total ram usage:        1 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_UART_printf
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618  0783                     _UART_write:	
   619                           ;psect for function _UART_write
   620                           
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in _UART_write: [wreg]
   624                           ;UART_write@dato stored from wreg
   625  0783  00F0               	movwf	UART_write@dato
   626  0784                     l640:
   627                           
   628                           ;./UART.h: 39: void UART_write(char dato);./UART.h: 40: {;./UART.h: 41:     TXREG = dato
      +                          ;
   629  0784  0870               	movf	UART_write@dato,w
   630  0785  1283               	bcf	3,5	;RP0=0, select bank0
   631  0786  1303               	bcf	3,6	;RP1=0, select bank0
   632  0787  0099               	movwf	25	;volatile
   633  0788                     l29:	
   634                           ;./UART.h: 42:      while(TXSTAbits.TRMT == 0);
   635                           
   636  0788  1683               	bsf	3,5	;RP0=1, select bank1
   637  0789  1303               	bcf	3,6	;RP1=0, select bank1
   638  078A  1C98               	btfss	24,1	;volatile
   639  078B  2F8D               	goto	u11
   640  078C  2F8E               	goto	u10
   641  078D                     u11:
   642  078D  2F88               	goto	l29
   643  078E                     u10:
   644  078E                     l32:
   645  078E  0008               	return
   646  078F                     __end_of_UART_write:
   647                           
   648                           	psect	text4
   649  078F                     __ptext4:	
   650 ;; *************** function _UART_init *****************
   651 ;; Defined at:
   652 ;;		line 17 in file "./UART.h"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used: 1
   672 ;; This function calls:
   673 ;;		Nothing
   674 ;; This function is called by:
   675 ;;		_main
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679  078F                     _UART_init:	
   680                           ;psect for function _UART_init
   681                           
   682  078F                     l642:	
   683                           ;incstack = 0
   684                           ; Regs used in _UART_init: [wreg]
   685                           
   686                           
   687                           ;./UART.h: 19:     TRISCbits.TRISC7 = 1;
   688  078F  1683               	bsf	3,5	;RP0=1, select bank1
   689  0790  1303               	bcf	3,6	;RP1=0, select bank1
   690  0791  1787               	bsf	7,7	;volatile
   691                           
   692                           ;./UART.h: 20:     TRISCbits.TRISC6 = 0;
   693  0792  1307               	bcf	7,6	;volatile
   694                           
   695                           ;./UART.h: 22:     TXSTAbits.SYNC = 0;
   696  0793  1218               	bcf	24,4	;volatile
   697                           
   698                           ;./UART.h: 23:     TXSTAbits.TX9 = 0;
   699  0794  1318               	bcf	24,6	;volatile
   700                           
   701                           ;./UART.h: 24:     TXSTAbits.BRGH = 1;
   702  0795  1518               	bsf	24,2	;volatile
   703  0796                     l644:
   704                           
   705                           ;./UART.h: 25:     SPBRG = 129;
   706  0796  3081               	movlw	129
   707  0797  0099               	movwf	25	;volatile
   708  0798                     l646:
   709                           
   710                           ;./UART.h: 26:     RCSTAbits.SPEN = 1;
   711  0798  1283               	bcf	3,5	;RP0=0, select bank0
   712  0799  1303               	bcf	3,6	;RP1=0, select bank0
   713  079A  1798               	bsf	24,7	;volatile
   714  079B                     l648:
   715                           
   716                           ;./UART.h: 27:     TXSTAbits.TXEN = 1;
   717  079B  1683               	bsf	3,5	;RP0=1, select bank1
   718  079C  1303               	bcf	3,6	;RP1=0, select bank1
   719  079D  1698               	bsf	24,5	;volatile
   720  079E                     l650:
   721                           
   722                           ;./UART.h: 28:     RCSTAbits.CREN = 1;
   723  079E  1283               	bcf	3,5	;RP0=0, select bank0
   724  079F  1303               	bcf	3,6	;RP1=0, select bank0
   725  07A0  1618               	bsf	24,4	;volatile
   726  07A1                     l21:
   727  07A1  0008               	return
   728  07A2                     __end_of_UART_init:
   729  007E                     btemp	set	126	;btemp
   730  007E                     wtemp0	set	126
   731                           
   732                           	psect	idloc
   733                           
   734                           ;Config register IDLOC0 @ 0x2000
   735                           ;	unspecified, using default values
   736  2000                     	org	8192
   737  2000  3FFF               	dw	16383
   738                           
   739                           ;Config register IDLOC1 @ 0x2001
   740                           ;	unspecified, using default values
   741  2001                     	org	8193
   742  2001  3FFF               	dw	16383
   743                           
   744                           ;Config register IDLOC2 @ 0x2002
   745                           ;	unspecified, using default values
   746  2002                     	org	8194
   747  2002  3FFF               	dw	16383
   748                           
   749                           ;Config register IDLOC3 @ 0x2003
   750                           ;	unspecified, using default values
   751  2003                     	org	8195
   752  2003  3FFF               	dw	16383
   753                           
   754                           	psect	config
   755                           
   756                           ;Config register CONFIG @ 0x2007
   757                           ;	Oscillator Selection bits
   758                           ;	FOSC = HS, HS oscillator
   759                           ;	Watchdog Timer Enable bit
   760                           ;	WDTE = OFF, WDT disabled
   761                           ;	Power-up Timer Enable bit
   762                           ;	PWRTE = ON, PWRT enabled
   763                           ;	Brown-out Reset Enable bit
   764                           ;	BOREN = OFF, BOR disabled
   765                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   766                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   767                           ;	Data EEPROM Memory Code Protection bit
   768                           ;	CPD = OFF, Data EEPROM code protection off
   769                           ;	Flash Program Memory Write Enable bits
   770                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   771                           ;	In-Circuit Debugger Mode bit
   772                           ;	DEBUG = 0x1, unprogrammed default
   773                           ;	Flash Program Memory Code Protection bit
   774                           ;	CP = OFF, Code protection off
   775  2007                     	org	8199
   776  2007  3F32               	dw	16178

Data Sizes:
    Strings     72
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_printf@cadena	PTR unsigned char  size(1) Largest target is 40
		 -> STR_3(CODE[15]), STR_2(CODE[17]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_UART_printf
    _UART_printf->_UART_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     204
                                              3 COMMON     2     2      0
                          _UART_init
                        _UART_printf
                          _UART_read
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_printf                                          2     2      0     159
                                              1 COMMON     2     2      0
                         _UART_write
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_printf
     _UART_write
   _UART_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 14:46:03 2022

                      pc 0002                       l21 07A1                       l32 078E  
                     l25 0782                       l29 0788                       l38 07C0  
                     u10 078E                       u11 078D                       u20 077F  
                     u21 077E                       u60 07C0                       u61 07BF  
                     u70 07E0                       u71 07DF                       u80 07EF  
                     u81 07EE                       fsr 0004                      l700 07C1  
                    l710 07E0                      l702 07C7                      l640 0784  
                    l712 07E6                      l704 07CC                      l650 079E  
                    l642 078F                      l714 07E9                      l706 07D2  
                    l644 0796                      l660 0781                      l652 0779  
                    l716 07EF                      l708 07DA                      l646 0798  
                    l654 077F                      l718 07F5                      l648 079B  
                    l692 07A3                      l694 07A4                      l696 07B0  
                    l698 07B4                      fsr0 0004              main@dato_rx 0074  
                   STR_1 0009                     STR_2 0031                     STR_3 0042  
                   _main 07C1                     btemp 007E                     start 0000  
                  ?_main 0070                    _RCREG 001A                    _SPBRG 0099  
                  _TXREG 0019              ?_UART_write 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073        __end_of_UART_init 07A2  
      __end_of_UART_read 0783             ?_UART_printf 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07C1             ??_UART_write 0070  
             __stringtab 0003       __end_of_UART_write 078F                  __ptext1 0779  
                __ptext2 07A2                  __ptext3 0783                  __ptext4 078F  
   end_of_initialization 07FC                _RCSTAbits 0018                _PORTBbits 0006  
              _UART_init 078F                _UART_read 0779                _TRISBbits 0086  
              _TRISCbits 0087                _TXSTAbits 0098               ?_UART_init 0070  
             ?_UART_read 0070      start_initialization 07FC                ___latbits 0002  
      UART_printf@cadena 0072                __pstrings 0003              ??_UART_init 0070  
            ??_UART_read 0070                 _PIR1bits 000C            ??_UART_printf 0071  
            __stringbase 0008           UART_write@dato 0070       __end_of__stringtab 0009  
    __end_of_UART_printf 07C1                stringcode 0003              _UART_printf 07A2  
               stringdir 0003                 stringtab 0003               _UART_write 0783  
