

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 17:51:43 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F873A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F873A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0001                     _TMR0	set	1
   168  0006                     _PORTBbits	set	6
   169  000B                     _INTCONbits	set	11
   170  0019                     _TXREG	set	25
   171  001A                     _RCREG	set	26
   172  000C                     _PIR1bits	set	12
   173  0018                     _RCSTAbits	set	24
   174  001E                     _ADRESH	set	30
   175  001F                     _ADCON0bits	set	31
   176  0086                     _TRISBbits	set	134
   177  0081                     _OPTION_REGbits	set	129
   178  0099                     _SPBRG	set	153
   179  0098                     _TXSTAbits	set	152
   180  0087                     _TRISCbits	set	135
   181  009F                     _ADCON1bits	set	159
   182                           
   183                           	psect	cinit
   184  000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187  000F                     __initialization:
   188                           
   189                           ; Clear objects allocated to BANK0
   190  000F  1283               	bcf	3,5	;RP0=0, select bank0
   191  0010  1303               	bcf	3,6	;RP1=0, select bank0
   192  0011  01A0               	clrf	__pbssBANK0& (0+127)
   193  0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   194  0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   195  0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   196  0015  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   197  0016  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   198  0017  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   199  0018  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   200  0019  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   201  001A  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   202  001B  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   203  001C                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  001C                     __end_of__initialization:
   207  001C  0183               	clrf	3
   208  001D  118A  281F         	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssBANK0
   211  0020                     __pbssBANK0:
   212  0020                     _datos:
   213  0020                     	ds	10
   214  002A                     _tiempo:
   215  002A                     	ds	1
   216                           
   217                           	psect	cstackCOMMON
   218  0000                     __pcstackCOMMON:
   219  0000                     ??_ADC_init:
   220  0000                     ??_UART_init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0000                     ??_TIMER0_init:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0000                     ??_RB0_init:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           	psect	cstackBANK0
   231  002B                     __pcstackBANK0:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  002B                     ?_ADC_init:
   235  002B                     ?_ADC_read:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  002B                     ?_UART_init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  002B                     ?_Interrupcion:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  002B                     ??_Interrupcion:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  002B                     ?_TIMER0_init:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  002B                     ?_RB0_init:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  002B                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256                           
   257                           ; 1 bytes @ 0x0
   258  002B                     	ds	3
   259  002E                     ??_ADC_read:
   260                           
   261                           ; 1 bytes @ 0x3
   262  002E                     	ds	1
   263  002F                     ADC_read@channel:
   264                           
   265                           ; 1 bytes @ 0x4
   266  002F                     	ds	1
   267  0030                     ??_main:
   268                           
   269                           ; 1 bytes @ 0x5
   270  0030                     	ds	2
   271                           
   272                           	psect	maintext
   273  001F                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 71 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, pclath, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : B00/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1
   293 ;;      Params:         0       0       0
   294 ;;      Locals:         0       0       0
   295 ;;      Temps:          0       2       0
   296 ;;      Totals:         0       2       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels required when called: 2
   299 ;; This function calls:
   300 ;;		_ADC_init
   301 ;;		_ADC_read
   302 ;;		_RB0_init
   303 ;;		_TIMER0_init
   304 ;;		_UART_init
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310  001F                     _main:	
   311                           ;psect for function _main
   312                           
   313  001F                     l876:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   316                           
   317                           
   318                           ;main.c: 73:     TRISBbits.TRISB1 = 0;
   319  001F  1683               	bsf	3,5	;RP0=1, select bank1
   320  0020  1303               	bcf	3,6	;RP1=0, select bank1
   321  0021  1086               	bcf	6,1	;volatile
   322                           
   323                           ;main.c: 74:     TRISBbits.TRISB0 = 1;
   324  0022  1406               	bsf	6,0	;volatile
   325  0023                     l878:
   326                           
   327                           ;main.c: 76:     ADC_init();
   328  0023  118A  20AE  118A   	fcall	_ADC_init
   329                           
   330                           ;main.c: 77:     UART_init();
   331  0026  118A  209B  118A   	fcall	_UART_init
   332                           
   333                           ;main.c: 78:     TIMER0_init();
   334  0029  118A  20BC  118A   	fcall	_TIMER0_init
   335  002C                     l880:
   336                           
   337                           ;main.c: 79:     RB0_init();
   338  002C  118A  20C9  118A   	fcall	_RB0_init
   339  002F                     l882:
   340                           
   341                           ;main.c: 81:    INTCONbits.GIE = 1;
   342  002F  178B               	bsf	11,7	;volatile
   343  0030                     l884:
   344                           
   345                           ;main.c: 82:    INTCONbits.INTE = 1;
   346  0030  160B               	bsf	11,4	;volatile
   347                           
   348                           ;main.c: 83:     _delay((unsigned long)((500)*(400000/4000.0)));
   349  0031  3041               	movlw	65
   350  0032  1283               	bcf	3,5	;RP0=0, select bank0
   351  0033  1303               	bcf	3,6	;RP1=0, select bank0
   352  0034  00B1               	movwf	??_main+1
   353  0035  30EE               	movlw	238
   354  0036  00B0               	movwf	??_main
   355  0037                     u177:
   356  0037  0BB0               	decfsz	??_main,f
   357  0038  2837               	goto	u177
   358  0039  0BB1               	decfsz	??_main+1,f
   359  003A  2837               	goto	u177
   360  003B                     l886:
   361                           
   362                           ;main.c: 86:     {;main.c: 87:          tiempo = ADC_read(0);
   363  003B  3000               	movlw	0
   364  003C  118A  2084  118A   	fcall	_ADC_read
   365  003F  1283               	bcf	3,5	;RP0=0, select bank0
   366  0040  1303               	bcf	3,6	;RP1=0, select bank0
   367  0041  00B0               	movwf	??_main
   368  0042  0830               	movf	??_main,w
   369  0043  00AA               	movwf	_tiempo
   370  0044                     l888:
   371                           
   372                           ;main.c: 89:          if(tiempo >= 210){
   373  0044  30D2               	movlw	210
   374  0045  022A               	subwf	_tiempo,w
   375  0046  1C03               	skipc
   376  0047  2849               	goto	u151
   377  0048  284A               	goto	u150
   378  0049                     u151:
   379  0049  284D               	goto	l892
   380  004A                     u150:
   381  004A                     l890:
   382                           
   383                           ;main.c: 90:              PORTBbits.RB1 = 1;
   384  004A  1486               	bsf	6,1	;volatile
   385                           
   386                           ;main.c: 91:              INTCONbits.INTE = 0;
   387  004B  120B               	bcf	11,4	;volatile
   388                           
   389                           ;main.c: 92:         }else if(tiempo <= 10){
   390  004C  283B               	goto	l886
   391  004D                     l892:
   392  004D  300B               	movlw	11
   393  004E  022A               	subwf	_tiempo,w
   394  004F  1803               	skipnc
   395  0050  2852               	goto	u161
   396  0051  2853               	goto	u160
   397  0052                     u161:
   398  0052  2856               	goto	l100
   399  0053                     u160:
   400  0053                     l894:
   401                           
   402                           ;main.c: 93:              PORTBbits.RB1 = 0;
   403  0053  1086               	bcf	6,1	;volatile
   404                           
   405                           ;main.c: 94:              INTCONbits.INTE = 0;
   406  0054  120B               	bcf	11,4	;volatile
   407                           
   408                           ;main.c: 95:         }else{
   409  0055  283B               	goto	l886
   410  0056                     l100:
   411                           
   412                           ;main.c: 96:             INTCONbits.INTE = 1;
   413  0056  160B               	bsf	11,4	;volatile
   414  0057  283B               	goto	l886
   415  0058  118A  280D         	ljmp	start
   416  005A                     __end_of_main:
   417                           
   418                           	psect	text1
   419  009B                     __ptext1:	
   420 ;; *************** function _UART_init *****************
   421 ;; Defined at:
   422 ;;		line 30 in file "./UART.h"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1
   436 ;;      Params:         0       0       0
   437 ;;      Locals:         0       0       0
   438 ;;      Temps:          0       0       0
   439 ;;      Totals:         0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450  009B                     _UART_init:	
   451                           ;psect for function _UART_init
   452                           
   453  009B                     l832:	
   454                           ;incstack = 0
   455                           ; Regs used in _UART_init: [wreg]
   456                           
   457                           
   458                           ;./UART.h: 32:     TRISCbits.TRISC7 = 1;
   459  009B  1683               	bsf	3,5	;RP0=1, select bank1
   460  009C  1303               	bcf	3,6	;RP1=0, select bank1
   461  009D  1787               	bsf	7,7	;volatile
   462                           
   463                           ;./UART.h: 33:     TRISCbits.TRISC6 = 0;
   464  009E  1307               	bcf	7,6	;volatile
   465                           
   466                           ;./UART.h: 35:     TXSTAbits.SYNC = 0;
   467  009F  1218               	bcf	24,4	;volatile
   468                           
   469                           ;./UART.h: 36:     TXSTAbits.TX9 = 0;
   470  00A0  1318               	bcf	24,6	;volatile
   471                           
   472                           ;./UART.h: 37:     TXSTAbits.BRGH = 1;
   473  00A1  1518               	bsf	24,2	;volatile
   474  00A2                     l834:
   475                           
   476                           ;./UART.h: 38:     SPBRG = 25;
   477  00A2  3019               	movlw	25
   478  00A3  0099               	movwf	25	;volatile
   479  00A4                     l836:
   480                           
   481                           ;./UART.h: 39:     RCSTAbits.SPEN = 1;
   482  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   483  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   484  00A6  1798               	bsf	24,7	;volatile
   485  00A7                     l838:
   486                           
   487                           ;./UART.h: 40:     TXSTAbits.TXEN = 1;
   488  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   489  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   490  00A9  1698               	bsf	24,5	;volatile
   491  00AA                     l840:
   492                           
   493                           ;./UART.h: 41:     RCSTAbits.CREN = 1;
   494  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   495  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   496  00AC  1618               	bsf	24,4	;volatile
   497  00AD                     l44:
   498  00AD  0008               	return
   499  00AE                     __end_of_UART_init:
   500                           
   501                           	psect	text2
   502  00BC                     __ptext2:	
   503 ;; *************** function _TIMER0_init *****************
   504 ;; Defined at:
   505 ;;		line 56 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1
   519 ;;      Params:         0       0       0
   520 ;;      Locals:         0       0       0
   521 ;;      Temps:          0       0       0
   522 ;;      Totals:         0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533  00BC                     _TIMER0_init:	
   534                           ;psect for function _TIMER0_init
   535                           
   536  00BC                     l842:	
   537                           ;incstack = 0
   538                           ; Regs used in _TIMER0_init: [wreg+status,2+status,0]
   539                           
   540                           
   541                           ;main.c: 58:     OPTION_REGbits.T0CS = 0;
   542  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   543  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   544  00BE  1281               	bcf	1,5	;volatile
   545                           
   546                           ;main.c: 59:     OPTION_REGbits.PSA = 0;
   547  00BF  1181               	bcf	1,3	;volatile
   548  00C0                     l844:
   549                           
   550                           ;main.c: 60:     OPTION_REGbits.PS = 0B100;
   551  00C0  0801               	movf	1,w	;volatile
   552  00C1  39F8               	andlw	-8
   553  00C2  3804               	iorlw	4
   554  00C3  0081               	movwf	1	;volatile
   555  00C4                     l846:
   556                           
   557                           ;main.c: 61:     TMR0 = 255;
   558  00C4  30FF               	movlw	255
   559  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   560  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   561  00C7  0081               	movwf	1	;volatile
   562  00C8                     l89:
   563  00C8  0008               	return
   564  00C9                     __end_of_TIMER0_init:
   565                           
   566                           	psect	text3
   567  00C9                     __ptext3:	
   568 ;; *************** function _RB0_init *****************
   569 ;; Defined at:
   570 ;;		line 64 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		None
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1
   584 ;;      Params:         0       0       0
   585 ;;      Locals:         0       0       0
   586 ;;      Temps:          0       0       0
   587 ;;      Totals:         0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 1
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598  00C9                     _RB0_init:	
   599                           ;psect for function _RB0_init
   600                           
   601  00C9                     l848:	
   602                           ;incstack = 0
   603                           ; Regs used in _RB0_init: []
   604                           
   605                           
   606                           ;main.c: 66:     OPTION_REGbits.INTEDG = 1;
   607  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   608  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   609  00CB  1701               	bsf	1,6	;volatile
   610                           
   611                           ;main.c: 67:     INTCONbits.INTF = 0;
   612  00CC  108B               	bcf	11,1	;volatile
   613  00CD                     l92:
   614  00CD  0008               	return
   615  00CE                     __end_of_RB0_init:
   616                           
   617                           	psect	text4
   618  0084                     __ptext4:	
   619 ;; *************** function _ADC_read *****************
   620 ;; Defined at:
   621 ;;		line 30 in file "./ADC.h"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  channel         1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  channel         1    4[BANK0 ] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      unsigned char 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1
   635 ;;      Params:         0       0       0
   636 ;;      Locals:         0       1       0
   637 ;;      Temps:          0       1       0
   638 ;;      Totals:         0       2       0
   639 ;;Total ram usage:        2 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649  0084                     _ADC_read:	
   650                           ;psect for function _ADC_read
   651                           
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
   655                           ;ADC_read@channel stored from wreg
   656  0084  1283               	bcf	3,5	;RP0=0, select bank0
   657  0085  1303               	bcf	3,6	;RP1=0, select bank0
   658  0086  00AF               	movwf	ADC_read@channel
   659  0087                     l822:
   660                           
   661                           ;./ADC.h: 30: uint8_t ADC_read(uint8_t channel);./ADC.h: 31: {;./ADC.h: 32:     ADCON0bi
      +                          ts.ADCS = channel;
   662  0087  082F               	movf	ADC_read@channel,w
   663  0088  00AE               	movwf	??_ADC_read
   664  0089  0EAE               	swapf	??_ADC_read,f
   665  008A  0DAE               	rlf	??_ADC_read,f
   666  008B  0DAE               	rlf	??_ADC_read,f
   667  008C  081F               	movf	31,w	;volatile
   668  008D  062E               	xorwf	??_ADC_read,w
   669  008E  393F               	andlw	-193
   670  008F  062E               	xorwf	??_ADC_read,w
   671  0090  009F               	movwf	31	;volatile
   672  0091                     l824:
   673                           
   674                           ;./ADC.h: 33:     _delay((unsigned long)((25)*(400000/4000000.0)));
   675  0091  2892               	nop2	;2 cycle nop
   676  0092                     l826:
   677                           
   678                           ;./ADC.h: 34:     ADCON0bits.GO = 1;
   679  0092  1283               	bcf	3,5	;RP0=0, select bank0
   680  0093  1303               	bcf	3,6	;RP1=0, select bank0
   681  0094  151F               	bsf	31,2	;volatile
   682  0095                     l38:	
   683                           ;./ADC.h: 35:     while(ADCON0bits.GO_DONE);
   684                           
   685  0095  191F               	btfsc	31,2	;volatile
   686  0096  2898               	goto	u111
   687  0097  2899               	goto	u110
   688  0098                     u111:
   689  0098  2895               	goto	l38
   690  0099                     u110:
   691  0099                     l828:
   692                           
   693                           ;./ADC.h: 36:     return ADRESH;
   694  0099  081E               	movf	30,w	;volatile
   695  009A                     l41:
   696  009A  0008               	return
   697  009B                     __end_of_ADC_read:
   698                           
   699                           	psect	text5
   700  00AE                     __ptext5:	
   701 ;; *************** function _ADC_init *****************
   702 ;; Defined at:
   703 ;;		line 16 in file "./ADC.h"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1
   717 ;;      Params:         0       0       0
   718 ;;      Locals:         0       0       0
   719 ;;      Temps:          0       0       0
   720 ;;      Totals:         0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731  00AE                     _ADC_init:	
   732                           ;psect for function _ADC_init
   733                           
   734  00AE                     l810:	
   735                           ;incstack = 0
   736                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
   737                           
   738                           
   739                           ;./ADC.h: 18:     ADCON1bits.ADFM = 0;
   740  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   741  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   742  00B0  139F               	bcf	31,7	;volatile
   743  00B1                     l812:
   744                           
   745                           ;./ADC.h: 19:     ADCON1bits.PCFG = 0b1110;
   746  00B1  081F               	movf	31,w	;volatile
   747  00B2  39F0               	andlw	-16
   748  00B3  380E               	iorlw	14
   749  00B4  009F               	movwf	31	;volatile
   750  00B5                     l814:
   751                           
   752                           ;./ADC.h: 20:     ADCON1bits.ADCS2 = 0;
   753  00B5  131F               	bcf	31,6	;volatile
   754  00B6                     l816:
   755                           
   756                           ;./ADC.h: 21:     ADCON0bits.ADCS1 = 0;
   757  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   758  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   759  00B8  139F               	bcf	31,7	;volatile
   760  00B9                     l818:
   761                           
   762                           ;./ADC.h: 22:     ADCON0bits.ADCS0 = 1;
   763  00B9  171F               	bsf	31,6	;volatile
   764  00BA                     l820:
   765                           
   766                           ;./ADC.h: 23:     ADCON0bits.ADON = 1;
   767  00BA  141F               	bsf	31,0	;volatile
   768  00BB                     l35:
   769  00BB  0008               	return
   770  00BC                     __end_of_ADC_init:
   771                           
   772                           	psect	text6
   773  005A                     __ptext6:	
   774 ;; *************** function _Interrupcion *****************
   775 ;; Defined at:
   776 ;;		line 29 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  dataRX          1    0        unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1
   790 ;;      Params:         0       0       0
   791 ;;      Locals:         0       0       0
   792 ;;      Temps:          0       3       0
   793 ;;      Totals:         0       3       0
   794 ;;Total ram usage:        3 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		Interrupt level 1
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803  005A                     _Interrupcion:	
   804                           ;psect for function _Interrupcion
   805                           
   806  005A                     i1l850:
   807                           
   808                           ;main.c: 31:     if(INTCONbits.TMR0IF == 1){
   809  005A  1D0B               	btfss	11,2	;volatile
   810  005B  285D               	goto	u12_21
   811  005C  285E               	goto	u12_20
   812  005D                     u12_21:
   813  005D  286C               	goto	i1l81
   814  005E                     u12_20:
   815  005E                     i1l852:
   816                           
   817                           ;main.c: 33:         PORTBbits.RB1 = 1;
   818  005E  1486               	bsf	6,1	;volatile
   819  005F                     i1l854:
   820                           
   821                           ;main.c: 34:         _delay((unsigned long)((100)*(400000/4000000.0)));
   822  005F  3002               	movlw	2
   823  0060  1283               	bcf	3,5	;RP0=0, select bank0
   824  0061  1303               	bcf	3,6	;RP1=0, select bank0
   825  0062  00AB               	movwf	??_Interrupcion
   826  0063                     u18_27:
   827  0063  0BAB               	decfsz	??_Interrupcion,f
   828  0064  2863               	goto	u18_27
   829  0065  2866               	nop2
   830  0066                     i1l856:
   831                           
   832                           ;main.c: 35:         PORTBbits.RB1 = 0;
   833  0066  1283               	bcf	3,5	;RP0=0, select bank0
   834  0067  1303               	bcf	3,6	;RP1=0, select bank0
   835  0068  1086               	bcf	6,1	;volatile
   836  0069                     i1l858:
   837                           
   838                           ;main.c: 36:         INTCONbits.TMR0IF = 0;
   839  0069  110B               	bcf	11,2	;volatile
   840  006A                     i1l860:
   841                           
   842                           ;main.c: 37:         INTCONbits.TMR0IE = 0;
   843  006A  128B               	bcf	11,5	;volatile
   844                           
   845                           ;main.c: 39:     }else if(PIR1bits.RCIF == 1){
   846  006B  287D               	goto	i1l86
   847  006C                     i1l81:
   848  006C  1E8C               	btfss	12,5	;volatile
   849  006D  286F               	goto	u13_21
   850  006E  2870               	goto	u13_20
   851  006F                     u13_21:
   852  006F  2873               	goto	i1l83
   853  0070                     u13_20:
   854  0070                     i1l862:
   855  0070  081A               	movf	26,w	;volatile
   856  0071                     i1l864:
   857                           
   858                           ;main.c: 42:         PIR1bits.RCIF = 0;
   859  0071  128C               	bcf	12,5	;volatile
   860                           
   861                           ;main.c: 44:     }
   862  0072  287D               	goto	i1l86
   863  0073                     i1l83:	
   864                           ;main.c: 45:     else if(INTCONbits.INTF == 1)
   865                           
   866  0073  1C8B               	btfss	11,1	;volatile
   867  0074  2876               	goto	u14_21
   868  0075  2877               	goto	u14_20
   869  0076                     u14_21:
   870  0076  287D               	goto	i1l86
   871  0077                     u14_20:
   872  0077                     i1l866:
   873                           
   874                           ;main.c: 46:     {;main.c: 47:         PORTBbits.RB1 = 0;
   875  0077  1086               	bcf	6,1	;volatile
   876  0078                     i1l868:
   877                           
   878                           ;main.c: 48:         TMR0 = tiempo;
   879  0078  082A               	movf	_tiempo,w
   880  0079  0081               	movwf	1	;volatile
   881  007A                     i1l870:
   882                           
   883                           ;main.c: 49:         INTCONbits.TMR0IF = 0;
   884  007A  110B               	bcf	11,2	;volatile
   885  007B                     i1l872:
   886                           
   887                           ;main.c: 50:         INTCONbits.TMR0IE = 1;
   888  007B  168B               	bsf	11,5	;volatile
   889  007C                     i1l874:
   890                           
   891                           ;main.c: 51:         INTCONbits.INTF = 0;
   892  007C  108B               	bcf	11,1	;volatile
   893  007D                     i1l86:
   894  007D  082D               	movf	??_Interrupcion+2,w
   895  007E  008A               	movwf	10
   896  007F  0E2C               	swapf	??_Interrupcion+1,w
   897  0080  0083               	movwf	3
   898  0081  0EFE               	swapf	btemp,f
   899  0082  0E7E               	swapf	btemp,w
   900  0083  0009               	retfie
   901  0084                     __end_of_Interrupcion:
   902  007E                     btemp	set	126	;btemp
   903  007E                     wtemp0	set	126
   904                           
   905                           	psect	intentry
   906  0004                     __pintentry:	
   907                           ;incstack = 0
   908                           ; Regs used in _Interrupcion: [wreg]
   909                           
   910  0004                     interrupt_function:
   911  007E                     saved_w	set	btemp
   912  0004  00FE               	movwf	btemp
   913  0005  0E03               	swapf	3,w
   914  0006  1283               	bcf	3,5	;RP0=0, select bank0
   915  0007  1303               	bcf	3,6	;RP1=0, select bank0
   916  0008  00AC               	movwf	??_Interrupcion+1
   917  0009  080A               	movf	10,w
   918  000A  00AD               	movwf	??_Interrupcion+2
   919  000B  118A  285A         	ljmp	_Interrupcion
   920                           
   921                           	psect	idloc
   922                           
   923                           ;Config register IDLOC0 @ 0x2000
   924                           ;	unspecified, using default values
   925  2000                     	org	8192
   926  2000  3FFF               	dw	16383
   927                           
   928                           ;Config register IDLOC1 @ 0x2001
   929                           ;	unspecified, using default values
   930  2001                     	org	8193
   931  2001  3FFF               	dw	16383
   932                           
   933                           ;Config register IDLOC2 @ 0x2002
   934                           ;	unspecified, using default values
   935  2002                     	org	8194
   936  2002  3FFF               	dw	16383
   937                           
   938                           ;Config register IDLOC3 @ 0x2003
   939                           ;	unspecified, using default values
   940  2003                     	org	8195
   941  2003  3FFF               	dw	16383
   942                           
   943                           	psect	config
   944                           
   945                           ;Config register CONFIG @ 0x2007
   946                           ;	Oscillator Selection bits
   947                           ;	FOSC = XT, XT oscillator
   948                           ;	Watchdog Timer Enable bit
   949                           ;	WDTE = OFF, WDT disabled
   950                           ;	Power-up Timer Enable bit
   951                           ;	PWRTE = ON, PWRT enabled
   952                           ;	Brown-out Reset Enable bit
   953                           ;	BOREN = OFF, BOR disabled
   954                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   955                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   956                           ;	Data EEPROM Memory Code Protection bit
   957                           ;	CPD = OFF, Data EEPROM code protection off
   958                           ;	Flash Program Memory Write Enable bits
   959                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   960                           ;	In-Circuit Debugger Mode bit
   961                           ;	DEBUG = 0x1, unprogrammed default
   962                           ;	Flash Program Memory Code Protection bit
   963                           ;	CP = OFF, Code protection off
   964  2007                     	org	8199
   965  2007  3F31               	dw	16177

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      7      18
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupcion in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_read

Critical Paths under _Interrupcion in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupcion in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      22
                                              5 BANK0      2     2      0
                           _ADC_init
                           _ADC_read
                           _RB0_init
                        _TIMER0_init
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RB0_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     2      0      22
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Interrupcion                                         4     4      0       1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _RB0_init
   _TIMER0_init
   _UART_init

 _Interrupcion (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      7      12       4       19.1%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0      12       7        0.0%
DATA                 0      0      12       8        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 17:51:43 2022

                     l41 009A                       l35 00BB                       l44 00AD  
                     l38 0095                       l92 00CD                       l89 00C8  
                    l100 0056                      l810 00AE                      l820 00BA  
                    l812 00B1                      l814 00B5                      l822 0087  
                    l816 00B6                      l824 0091                      l840 00AA  
                    l832 009B                      l818 00B9                      l826 0092  
                    l842 00BC                      l834 00A2                      l828 0099  
                    l844 00C0                      l836 00A4                      l846 00C4  
                    l838 00A7                      l848 00C9                      l880 002C  
                    l890 004A                      l882 002F                      l892 004D  
                    l884 0030                      l876 001F                      l894 0053  
                    l886 003B                      l878 0023                      l888 0044  
                    u110 0099                      u111 0098                      u150 004A  
                    u151 0049                      u160 0053                      u161 0052  
                    u177 0037                     i1l81 006C                     i1l83 0073  
                   i1l86 007D                     _TMR0 0001                     _main 001F  
                   btemp 007E                     start 000D         __end_of_ADC_init 00BC  
       __end_of_ADC_read 009B         __end_of_RB0_init 00CE                    ?_main 002B  
                  i1l850 005A                    i1l860 006A                    i1l852 005E  
                  i1l870 007A                    i1l862 0070                    i1l854 005F  
                  i1l872 007B                    i1l864 0071                    i1l856 0066  
                  i1l874 007C                    i1l866 0077                    i1l858 0069  
                  i1l868 0078                    _RCREG 001A                    u12_20 005E  
                  u12_21 005D                    u13_20 0070                    u13_21 006F  
                  u14_20 0077                    u14_21 0076                    _SPBRG 0099  
                  u18_27 0063                    _TXREG 0019                    _datos 0020  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 005A                   ??_main 0030  
           ?_TIMER0_init 002B                   _ADRESH 001E            ?_Interrupcion 002B  
      __end_of_UART_init 00AE                   _tiempo 002A                   saved_w 007E  
              ?_ADC_init 002B                ?_ADC_read 002B           ??_Interrupcion 002B  
__end_of__initialization 001C                ?_RB0_init 002B           __pcstackCOMMON 0000  
         _OPTION_REGbits 0081          ADC_read@channel 002F               ??_ADC_init 0000  
             ??_ADC_read 002E               __pbssBANK0 0020               ??_RB0_init 0000  
             __pmaintext 001F               __pintentry 0004                  __ptext1 009B  
                __ptext2 00BC                  __ptext3 00C9                  __ptext4 0084  
                __ptext5 00AE                  __ptext6 005A     __end_of_Interrupcion 0084  
   end_of_initialization 001C                _RCSTAbits 0018                _PORTBbits 0006  
              _UART_init 009B                _TRISBbits 0086                _TRISCbits 0087  
              _TXSTAbits 0098               ?_UART_init 002B      start_initialization 000F  
              ___latbits 0001            __pcstackBANK0 002B             _Interrupcion 005A  
            ??_UART_init 0000            ??_TIMER0_init 0000                 _ADC_init 00AE  
               _ADC_read 0084        interrupt_function 0004                 _RB0_init 00C9  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
    __end_of_TIMER0_init 00C9              _TIMER0_init 00BC               _INTCONbits 000B  
               intlevel1 0000  
